version: '3.8'

networks:
  laravel:
    name: laravel-network
    driver: bridge

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./app:/var/www/html
      - ./dockerfiles/nginx:/etc/nginx/conf.d
    depends_on:
      - php
      - redis
      - postgres
      - mailhog
    networks:
      - laravel

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=laravel
    networks:
      - laravel

  php:
    image: laravel/php
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        user: sammy
        uid: 1000
    container_name: php
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
    networks:
      - laravel

  redis:
    image: redis:7.0-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  composer:
    image: laravel/composer
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel

  artisan:
    image: laravel/artisan
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        user: sammy
        uid: 1000
    container_name: artisan
    volumes:
      - ./app:/var/www/html
    depends_on:
      - postgres
    working_dir: /var/www/html
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - laravel

  soketi:
    image: 'quay.io/soketi/soketi:latest-16-alpine'
    container_name: soketi
    restart: unless-stopped
    environment:
      SOKETI_DEBUG: '1'
      SOKETI_METRICS_SERVER_PORT: '9601'
    ports:
      - '${SOKETI_PORT:-6001}:6001'
      - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
    networks:
      - laravel

  supervisor:
    image: laravel/php
    container_name: supervisor
    restart: unless-stopped
    volumes:
      - ./app:/var/www/html
      - ./dockerfiles/supervisord.conf:/etc/supervisord.conf
    depends_on:
      - postgres
      - redis
    networks:
      - laravel
    command: supervisord -c /etc/supervisord.conf